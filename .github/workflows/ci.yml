name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run tests
        run: |
          python -c "import app; print('App imports successfully')"
          python -c "from app import app; print('FastAPI app created successfully')"

      - name: Test application startup
        run: |
          python -c "
          from fastapi.testclient import TestClient
          from app import app
          client = TestClient(app)
          response = client.get('/')
          assert response.status_code == 200
          print('Application starts and responds successfully')
          "

  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Run safety check
        run: safety check

      - name: Run bandit security check
        run: bandit -r . -f json || true

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t portfolio-analysis .

      - name: Test Docker image
        run: |
          docker run -d -p 8000:8000 --name test-container portfolio-analysis
          sleep 10
          curl -f http://localhost:8000/ || exit 1
          docker stop test-container
          docker rm test-container
